# compose/docker-compose.dev.yml
services:
  web:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    image: ftc-lendx:dev
    env_file:
      - ../.env
    environment:
      # Ensure Django hits the containerized DB
      DB_HOST: db
      DB_PORT: "5432"
    ports:
      - "8000:8000"
    volumes:
      - ../:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_worker:
    build:
      context: ..
      dockerfile: deploy/Dockerfile
    image: ftc-lendx:dev
    command: celery -A backend worker -l info --concurrency=4
    env_file:
      - ../.env
    environment:
      DB_HOST: db
      DB_PORT: "5432"
    volumes:
      - ../:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:16
    env_file:
      - ../.env
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$DB_USER -d $$DB_NAME -h 127.0.0.1 -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  pgdata:
